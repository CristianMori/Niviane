<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://niviane/" elementFormDefault="qualified" targetNamespace="http://niviane/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://schemas.datacontract.org/2004/07/Niviane_Service" />
  <xs:element name="IsAvailable">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="IsAvailableResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="IsAvailableResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Nodes">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="NodesResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element xmlns:q1="http://schemas.datacontract.org/2004/07/Niviane_Service" minOccurs="0" name="NodesResult" nillable="true" type="q1:ArrayOfNodeDetail" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Node">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="NodeID" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="NodeResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element xmlns:q2="http://schemas.datacontract.org/2004/07/Niviane_Service" minOccurs="0" name="NodeResult" nillable="true" type="q2:NodeDetail" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="NodeBasic">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="NodeID" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="Value" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="NodeBasicResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="NodeBasicResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="NodePollingOn">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="NodeID" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="Value" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="NodePollingOnResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="NodePollingOnResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="NodePollingOff">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="NodeID" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="Value" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="NodePollingOffResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="NodePollingOffResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="NodeName">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="NodeID" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="Value" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="NodeNameResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="NodeNameResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="NodeLocation">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="NodeID" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="Value" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="NodeLocationResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="NodeLocationResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AllOn">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="AllOnResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="AllOnResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AllOff">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="AllOffResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="AllOffResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ProcessRunning">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="ProcessRunningResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element xmlns:q3="http://schemas.datacontract.org/2004/07/Niviane_Service" minOccurs="0" name="ProcessRunningResult" nillable="true" type="q3:ProcessRunning" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ProcessStart">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="Process" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="Arguments" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ProcessStartResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="ProcessStartResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ProcessStop">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="ProcessStopResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="ProcessStopResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="VLC">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="Arguments" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="VLCResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="VLCResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>